1. Scenario: You have a table called "orders" that contains information about customer orders, including the customer ID, the order date, and the total order amount. Write a query to retrieve the total revenue generated by each customer.

Select * from orders;


2. Scenario: You have a table called "employees" that contains information about company employees, including their names and the departments they work in. Write a query to retrieve the name of each department and the number of employees working in that department

Select count(name),department_name from employees group by department_name;


3. Scenario: You have a table called "products" that contains information about products sold by your company, including the product ID, the product name, and the price. Write a query to retrieve the top 10 most expensive products.

Select product_name from products sort by price desc limit 10;


4. Scenario: You have a table called "students" that contains information about students in a school, including their names and their grades in different subjects. Write a query to retrieve the average grade for each subject.

Select avg(subject_name) from students;


5. Scenario: You have a table called "orders" that contains information about customer orders, including the customer ID, the order date, and the total order amount. Write a query to retrieve the total revenue generated by each customer for orders placed in the current year.

Select * from orders where year(order_date) = year(curdate());


6. Scenario: You have a table called "sales" that contains information about the sales of a product, including the sales date, the product ID, the quantity sold, and the price. Write a query to calculate the revenue generated by the product for each month

Select sum(quantity_sold*price) as revenue from sales group by month(sales_date);


7. Scenario: You have a table called "customers" that contains information about customers, including their age, gender, and location. Write a query to calculate the average age of customers by gender and location.

Select avg(age) from customers group by gender,location;


8. Scenario: You have a table called "website_traffic" that contains information about website traffic, including the date, the number of visitors, and the source of the traffic. Write a query to calculate the percentage of traffic that comes from each source.

Select (no_of_visitor/sum(no_of_visitor))*100,source from website_traffic group by source;


9. Scenario: You have a table called "sales" that contains information about the sales of a product, including the sales date, the product ID, the quantity sold, and the price. Write a query to calculate the total revenue generated by the product for each quarter of the year.

Select sum(quantity_sold*price) as revenue from sales group by quarter(sales_date);



10.Scenario: You have a table called "customer_feedback" that contains information about customer feedback, including the date, the feedback score, and the comments. Write a query to calculate the average feedback score by month and year.

Select avg(feedback),month(date),year(date) from customer_feedback group by month(date),year(date);


11.Scenario: You have a table called "product_reviews" that contains information about product reviews, including the product ID, the review date, the review text, and the reviewer's score. Write a query to calculate the average score for each product.

Select avg(reviewer_score),product_id from product_reviews group by product_id;


12.Scenario: You have a table called "website_sessions" that contains information about website sessions, including the date, the user ID, and the duration of the session. Write a query to calculate the average duration of sessions by month.

Select avg(duration),month(date) from website_sessions group by month(date)


13.Scenario: You have a table called "product_ratings" that contains information about product ratings, including the product ID, the rating date, and the rating score. Write a query to calculate the average rating score by product for the last 30 days.

Select avg(rating_score) from product_ratings where rating_date > current_date - interval 30 day;


14.Scenario: You have two tables: "customers" and "orders". The "customers" table contains information about customers, including their ID and name. The "orders" table contains information about customer orders, including the customer ID, the order ID, and the order date. Write a query to retrieve the name of each customer and the date of their most recent order.

Select c.name,o.date from customers c inner join orders o on c.id = o.id sort by day(o.date) desc limit 1;


15.Scenario: You have two tables: "employees" and "departments". The "employees" table contains information about company employees, including their names and the departments they work in. The "departments" table contains information about company departments, including the department ID and the department name. Write a query to retrieve the name of each employee and the name of their department.

Select e.names,d.department_name from employees e inner join departments d on e.department_id = d.department_id;
